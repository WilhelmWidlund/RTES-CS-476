/* Audio system main file
 */

#include <stdio.h>
#include "system.h"
#include "io.h"
#include <stdint.h>
#include <unistd.h>
#include <string.h>
#include "altera_avalon_mailbox_simple.h"
#include <altera_avalon_performance_counter.h>

// To monitor terminal in powershell:
// nios2-terminal --device 2 --instance 0

// To download code to board
// nios2-download -g SysAudio.elf --device 2 --instance 0

// PIO definitions for the interrupt handling on the switches
#define PIO_IntrSwitch_Data	0
#define PIO_IntrSwitch_IRQEN	4*2
#define PIO_IntrSwitch_IRQFLAG	4*3


void choose_task(int task)
{
	if(task == 1)
	{
		// First switch (SW0)
	}
	else if(task == 2)
	{
		// Second switch (SW1)
	}
	else if(task == 4)
	{
		// Third switch (SW2)
		// Etc. add as needed...
	}
}

void isr_switches(void* context)
{
	// Read interrupt source
	uint8_t pinvals = IORD_8DIRECT(PIO_SWITCHES_BASE, PIO__IntrSwitch_IRQFLAG);
	// Save choice
	choice = (int)pinvals;
	// Clear the interrupt flag
	IOWR_8DIRECT(PIO_SWITCHES_BASE, PIO__IntrSwitch_IRQFLAG, pinvals);
}

void setup_switch_interrupts(uint8_t chosen_switches)
{
	// Setup interrupts on the chosen switches
	IOWR_8DIRECT(PIO_SWITCHES_BASE, PIO_IntrSwitch_IRQEN, chosen_switches);
	alt_ic_isr_register(PIO_SWITCHES_IRQ_INTERRUPT_CONTROLLER_ID, PIO_SWITCHES_IRQ, isr_switches, NULL, NULL);
	return;
}

int main()
{
	// Setup interrupts on the first 2 switches
	setup_switch_interrupts(0x3);

  	return 0;
}
